#do not use ctrl-b
unbind C-b
set -g prefix C-s
bind-key -r C-s send-prefix

# reload the .tmux conf file
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

set-window-option -g utf8 on

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

set-option -g default-terminal "screen-256color"
# vim emulation is not optimal. use emacs which gives more regular terminal like key commands
set-option -g status-keys "emacs"

set-window-option -g automatic-rename off

# default statusbar colors
set -g status-bg black
set -g status-fg yellow

set -g status-attr black
set -g status-left-length 50

setw -g monitor-activity on
set -g visual-activity off
set -g window-status-activity-attr bold
set -g window-status-activity-fg red
set -g window-status-activity-bg black

# Highlight active window
set-window-option -g window-status-current-fg green
set-window-option -g window-status-current-bg black

set-option -g message-bg black
set-option -g message-fg brightred

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# pane border
set-option -g pane-border-fg white #base2
set-option -g pane-active-border-fg brightcyan #base1

set -g status-right "pane: #P - #(battery -t -g gray) %d %b %R#[default]"


# split window with sane defaults starting in the current path
bind-key - split-window -v -p 20 -c '#{pane_current_path}'
bind-key \ split-window -h -p 40 -c '#{pane_current_path}'
# 80/20 split
#bind-key C-t split-window -p 20 -c "#{pane_current_path}"

# Fine adjustment (1 or 2 cursor cells per bump)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# Coarse adjustment (5 or 10 cursor cells per bump)
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# open new window ctrl-s c and start in the current path
bind c new-window -c '#{pane_current_path}'
# 1 based index (instead of 0) to navigate windows
set-option -g base-index 1
set-option -g renumber-windows on

bind-key b break-pane -d

# choose nerdtree like between session and windows
bind-key C-j choose-tree

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

bind-key h split-window -h "htop"

# Open a new pane and tail dev log
#bind-key l split-window -h "tail -f  log/development.log"

# Break out a session
bind-key C-b send-keys 'tat && exit' 'C-m'

# kill session but stay in tmux with ctrl-k
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# Prompted join-pane
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"
# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# Make Vim responsive to esc
set -s escape-time 0

#Reattach to user-namespec for vim
set-option -g default-command "reattach-to-user-namespace -l $SHELL"

# Enable scrolling up and down with mouse (not having to ctrl-s + [ every time).
set-window-option -g mode-mouse on
